services:
  db:
    image: postgres:16
    env_file: .env 
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file: .env 
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    volumes:
      - ./app/static:/app/static
    depends_on:
      db:
        condition: service_healthy

  alembic:
    build: .
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    command: >
      sh -c "alembic upgrade head && sleep infinity"
    volumes:
      - .:/app

volumes:
  postgres_data: